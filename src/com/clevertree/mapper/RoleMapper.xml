<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clevertree.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="module" jdbcType="VARCHAR" property="module" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="reserved1" jdbcType="VARCHAR" property="reserved1" />
    <result column="reserved2" jdbcType="VARCHAR" property="reserved2" />
    <result column="reserved3" jdbcType="VARCHAR" property="reserved3" />
    <result column="reserved4" jdbcType="VARCHAR" property="reserved4" />
    <result column="reserved5" jdbcType="VARCHAR" property="reserved5" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="Role">
    <result column="desc" jdbcType="LONGVARCHAR" property="desc" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, `module`, is_deleted, reserved1, reserved2, reserved3, reserved4, reserved5
  </sql>
  <sql id="Blob_Column_List">
    `desc`
  </sql>
  <select id="queryRole" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="saveRole" parameterType="Role">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into role (id, `name`, `module`, 
      is_deleted, reserved1, reserved2, 
      reserved3, reserved4, reserved5, 
      `desc`)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{module,jdbcType=VARCHAR}, 
      #{isDeleted,jdbcType=INTEGER}, #{reserved1,jdbcType=VARCHAR}, #{reserved2,jdbcType=VARCHAR}, 
      #{reserved3,jdbcType=VARCHAR}, #{reserved4,jdbcType=VARCHAR}, #{reserved5,jdbcType=VARCHAR}, 
      #{desc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="Role">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="name != null">
        `name`,
      </if>
      <if test="module != null">
        `module`,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="reserved1 != null">
        reserved1,
      </if>
      <if test="reserved2 != null">
        reserved2,
      </if>
      <if test="reserved3 != null">
        reserved3,
      </if>
      <if test="reserved4 != null">
        reserved4,
      </if>
      <if test="reserved5 != null">
        reserved5,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="module != null">
        #{module,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="reserved1 != null">
        #{reserved1,jdbcType=VARCHAR},
      </if>
      <if test="reserved2 != null">
        #{reserved2,jdbcType=VARCHAR},
      </if>
      <if test="reserved3 != null">
        #{reserved3,jdbcType=VARCHAR},
      </if>
      <if test="reserved4 != null">
        #{reserved4,jdbcType=VARCHAR},
      </if>
      <if test="reserved5 != null">
        #{reserved5,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Role">
    update role
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="module != null">
        `module` = #{module,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="reserved1 != null">
        reserved1 = #{reserved1,jdbcType=VARCHAR},
      </if>
      <if test="reserved2 != null">
        reserved2 = #{reserved2,jdbcType=VARCHAR},
      </if>
      <if test="reserved3 != null">
        reserved3 = #{reserved3,jdbcType=VARCHAR},
      </if>
      <if test="reserved4 != null">
        reserved4 = #{reserved4,jdbcType=VARCHAR},
      </if>
      <if test="reserved5 != null">
        reserved5 = #{reserved5,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="Role">
    update role
    set `name` = #{name,jdbcType=VARCHAR},
      `module` = #{module,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      reserved1 = #{reserved1,jdbcType=VARCHAR},
      reserved2 = #{reserved2,jdbcType=VARCHAR},
      reserved3 = #{reserved3,jdbcType=VARCHAR},
      reserved4 = #{reserved4,jdbcType=VARCHAR},
      reserved5 = #{reserved5,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Role">
    update role
    set `name` = #{name,jdbcType=VARCHAR},
      `module` = #{module,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      reserved1 = #{reserved1,jdbcType=VARCHAR},
      reserved2 = #{reserved2,jdbcType=VARCHAR},
      reserved3 = #{reserved3,jdbcType=VARCHAR},
      reserved4 = #{reserved4,jdbcType=VARCHAR},
      reserved5 = #{reserved5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>